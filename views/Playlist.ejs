<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Playlist</title>
  <link rel="stylesheet" href="/css/playlist.css" />
</head>
  
<body>
  <%- include('Dashboard') %>
    <div class="playlist">
      <header>
        <div class="home-playlist">
          <p>Home><b>Playlist</b></p>
        </div>
        <div class="search-newplaylist">
        <input type="search" placeholder="Search" id="searchInput">
          <button class="newPlaylist" onclick="addPlaylistBox()">
            <span>+</span>New Playlist
          </button>
        </div>
      </header>
      <div class="create-playlist" id="overlay">
        <div class="newScreen">
          <div class="newScreen-header">
            <h2>NEW PLAYLIST</h2>
            <button class="close-btn" onclick="hideNewScreen()">Ã—</button>
          </div>
          <hr />
          <div class="addNewScreen-form">
          

            <div class="form-class">
              <label>Playlist Name</label>
              <input type="text" name="playlistName" id="playlistName" required />
            </div>

            <div class="form-class">
              <label>Playlist Description</label>
              <textarea name="playlistDescription" id="playlistDescription" required></textarea>
            </div>

         
            <div class="form-class btn">
              <button id="createPlaylistButton">Create Playlist</button>
            </div>

          </div>

        </div>
      </div>
      <main>
        <div class="showPlaylists">
          <% if (playlists && playlists.length> 0) { %>
            <% playlists.forEach(playlist=> { %>
              <div class="playlist-items">
                <div class="playlist-img">
                </div>
                <div class="playlist-info">
                  <p>
                    <%= playlist.playlistname %>
                  </p>
                  <button onclick="location.href='/Dashboard/Playlist/PlaylistEdit/<%= playlist.id %>'">Edit</button> 
                  <button2 onclick="location.href='/Dashboard/Playlist/PlaylistDelete/<%= playlist.id %>' ">Delete</button2> 
                  <!-- <button2 onclick="deletePlaylist">Delete</button2> -->
                </div>
              </div>
              <% }); %>
                <% } else { %>
                  <p>No playlists available.</p>
                  <% } %>
        </div>
      </main>
    </div>
    <script src="/javaScripts/playlist.js"></script>
    <script>
      let searchInput = document.getElementById('searchInput');

      function filterPlaylists() {
        const filter = searchInput.value.toLowerCase();
        const playlists = document.querySelectorAll('.playlist-items');
        playlists.forEach(playlist => {
          const playlistName = playlist.querySelector('.playlist-info p').textContent.toLowerCase();
          if (playlistName.includes(filter)) {
            playlist.style.display = '';
          } else {
            playlist.style.display = 'none';
          }
        });
      }

      searchInput.addEventListener('input', filterPlaylists);

      window.addEventListener('load', filterPlaylists);








      async function deletePlaylist() {
    const selectedScreens = [];
    const checkboxes = document.querySelectorAll('input[name="checkbox"]:checked');
    checkboxes.forEach((checkbox) => {
      selectedScreens.push(checkbox.value);
    });

    if (selectedScreens.length === 0) {
      alert("Please select at least one screen");
      return;
    }

    console.log("playlistName", playlistName);
    console.log("playlistDescription", playlistDescription);
    console.log("selectedUrls", urls);
    console.log("selectedScreens", selectedScreens);

    try {
      const response = await fetch("/Dashboard/Playlist/deletePlaylist", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          screenIDs: selectedScreens,
          urls: null,
          playlistName: null,
          playlistDescription: null,
        }),
      });
      if (!response.ok) {
        throw new Error("Failed to edit playlist");
      }
      const responseData = await response.json();
      console.log("Playlist edit:", responseData.playlist);
      alert("Screen edit successfully!");
      window.location.href = '/Dashboard/Playlist';
    } catch (error) {
      console.error("Error edit playlist:", error);
      alert("Failed to edit playlist. Please try again.");
    }
  }
  window.deletePlaylist = deletePlaylist;













    </script>
</body>

</html>
