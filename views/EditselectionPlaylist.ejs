<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Document</title>
  <link rel="stylesheet" href="/css/groupScreen.css" />
  <!-- <link rel="stylesheet" href="/css/screen.css" /> -->

  <script>  
    const screenIDS=sessionStorage.getItem('screenIDS');
    console.log("screenIDS",screenIDS);
  </script>

</head>

<body>
  <div class="group">
    <div class="header">
      <!-- <div class="group-screen">
        <p>Home > <b>Group Screen</b></p>
      </div> -->
      <div class="group-screen-btn">
        <!-- <button onclick="goBack()">Go Back</button> -->
        <button onclick="publishPlaylist()">Publish</button>
      </div>
    </div>
    <div class="heading">
      <h3>Select Screens to Publish Playlist</h3>
      <!-- <h3>Selected Screens</h3> -->
    </div>
    <div class="selection-screens">
      <div class="select-screen">
        <!-- <input type="search" id="searchInput" placeholder="Search"> -->
        <table>
          <thead>
            <tr>
              <th></th>
              <th>Screen ID</th>           
              <th>Playlist Name</th>
              <th>SCREEN NAME</th>
             
            </tr>
          </thead>
          <tbody>
            <!-- <%# console.log("group : ",group); %> -->
            <% if (screens && screens.length) { %>
              <% screens.forEach(screen => { %>
               
                <!-- <% if (screen.playlistname === null) { %> -->
                  <tr>
                    <td>                  
                      <input type="checkbox" name="checkbox" value="<%= screen.screenid %>"/>
                    </td>
                    <td><%= screen.screenid %></td>
                  
                    <td><%= screen.playlistname %></td>
                    <td><%= screen.screenname %></td>
                   
                  </tr>
                <!-- <% } %> -->
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="6">No screens found</td>
              </tr>
            <% } %>
            
          </tbody>
        </table>
      </div>
      <!-- <div class="selected-screen" >
        <input type="text" id="searchInput" value="">
        <table>
          <thead>
            <tr>
              <th>Screen ID</th>            
              <th>SCREEN NAME</th>
              <th>Playlist Name</th>            
            </tr>
          </thead>
         <tbody>
            <% if (screens && screens.length) { %>
              <% screens.forEach(screen=>
                { %>
                <tr data-pairingcode="<%= screen.pairingcode %>">
                  <td id="screen.screenid">
                    <%= screen.screenid %>
                  </td>               
                  <td id="screen.screenname">
                    <%= screen.screenname %>
                  </td>
                  <td id="screen.playlistname" style="display: flex; justify-content: center; align-items: center;"  >
                  <p> <%= screen.playlistname %>  </p> 
                    <button2 class="delete" onclick="deletePlaylist('<%= screen.screenid %>')">
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g clip-path="url(#clip0_1_4435)">
                        <path d="M19 3H5C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3Z" stroke="#FF0000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M8 12H16" stroke="#FF0000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </g>
                        <defs>
                        <clipPath id="clip0_1_4435">
                        <rect width="24" height="24" fill="white"/>
                        </clipPath>
                        </defs>
                        </svg>
                    </button2>
                  </td>
                </tr>
                <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="9">No screens found</td>
                    </tr>
                    <% } %>
          </tbody>
        </table>
      </div> -->

      <div class="selected-screen">
        <input type="text" id="searchInput" value="">
        <table>
          <thead>
            <tr>
              <th>Screen ID</th>
              <th>SCREEN NAME</th>
              <th>Playlist Name</th>
            </tr>
          </thead>
          <tbody id="screenTableBody">
            <% if (screens && screens.length) { %>
              <% screens.forEach(screen => { %>
                <tr data-pairingcode="<%= screen.pairingcode %>" class="screen-row">
                  <td class="screen-screenid">
                    <%= screen.screenid %>
                  </td>
                  <td class="screen-screenname">
                    <%= screen.screenname %>
                  </td>
                  <td class="screen-playlistname" style="display: flex; justify-content: center; align-items: center;">
                    <p><%= screen.playlistname %></p>
                    <button2 class="delete" onclick="deletePlaylist('<%= screen.screenid %>')">
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g clip-path="url(#clip0_1_4435)">
                          <path d="M19 3H5C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3Z" stroke="#FF0000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                          <path d="M8 12H16" stroke="#FF0000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </g>
                        <defs>
                          <clipPath id="clip0_1_4435">
                            <rect width="24" height="24" fill="white"/>
                          </clipPath>
                        </defs>
                      </svg>
                    </button2>
                  </td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr>
                <td colspan="9">No screens found</td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>


      <!-- <div class="selected-screen" id="show-Group-Screen"> 
        <h2>Screens/Players</h2>
        <table>
          <thead>
            <tr>
              <th>Screen Id</th>
              <th>Pairing Code</th>
              <th>Screen Name</th>
              <th>Plalist Name</th>
            </tr>
          </thead>
          <tbody>
            <% if (screens && screens.length) { %>
              <% screens.forEach(screen=>
                { %>
                <tr data-pairingcode="<%= screen.pairingcode %>">
                  <td id="screen.screenid">
                    <%= screen.screenid %>
                  </td>
                  <td id="screen.pairingcode">
                    <%= screen.pairingcode %>
                  </td>
                  <td id="screen.screenname">
                    <%= screen.screenname %>
                  </td>
                  <td id="screen.playlistname" style="display: flex; justify-content: center; align-items: center;"  >
                  <p> <%= screen.playlistname %>  </p> 
                    <button class="delete" onclick="deletePlaylist('<%= screen.screenid %>')">
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g clip-path="url(#clip0_1_4435)">
                        <path d="M19 3H5C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3Z" stroke="#FF0000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        <path d="M8 12H16" stroke="#FF0000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </g>
                        <defs>
                        <clipPath id="clip0_1_4435">
                        <rect width="24" height="24" fill="white"/>
                        </clipPath>
                        </defs>
                        </svg>
                    </button>
                  </td>
                </tr>
                <% }) %>
                  <% } else { %>
                    <tr>
                      <td colspan="9">No screens found</td>
                    </tr>
                    <% } %>
          </tbody>
        </table>
        <div id="noResultsMessage" style="display: none; text-align: center;">No screens found.</div>
      </div> -->
    </div>

  </div>
 

 <!-- <script>
   const playlistName = sessionStorage.getItem("playlistName");
  const playlistDescription = sessionStorage.getItem("playlistDescription");
  const playlistUrls = sessionStorage.getItem("playlistUrls");
  const urls = JSON.parse(playlistUrls);
  async function publishPlaylist() {
 

  const selectedScreens = [];
  const checkboxes = document.querySelectorAll(
    'input[name="checkbox"]:checked'
  );
  checkboxes.forEach((checkbox) => {
    selectedScreens.push(checkbox.value);
  });

  if (selectedScreens.length === 0) {
    alert("Please select at least one screen");
    return;
  }

  console.log("playlistName", playlistName);
  console.log("playlistDescription", playlistDescription);
  console.log("selectedUrls", urls);
  console.log("selectedScreens", selectedScreens);

  try {
    const response = await fetch("/Dashboard/Playlist/createPlaylist", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        screenIDs: selectedScreens,
        urls: urls,
        playlistName: playlistName,
        playlistDescription: playlistDescription,
      }),
    });
    if (!response.ok) {
      throw new Error("Failed to edit playlist");
    }
    const responseData = await response.json();
    console.log("Playlist edit:", responseData.playlist);
    alert("Playlist edit successfully!");
    window.location.href='/Dashboard/Playlist'
  } catch (error) {
    console.error("Error edit playlist:", error);
    alert("Failed to edit playlist. Please try again.");
  }
}
window.publishPlaylist = publishPlaylist;

let searchInput=document.getElementById('searchInput');
searchInput.value=playlistName;
  
 </script> -->
 <script>
  const playlistName = sessionStorage.getItem("playlistName");
  const playlistDescription = sessionStorage.getItem("playlistDescription");
  const playlistUrls = sessionStorage.getItem("playlistUrls");
  const urls = JSON.parse(playlistUrls);

  async function publishPlaylist() {
    const selectedScreens = [];
    const checkboxes = document.querySelectorAll('input[name="checkbox"]:checked');
    checkboxes.forEach((checkbox) => {
      selectedScreens.push(checkbox.value);
    });

    if (selectedScreens.length === 0) {
      alert("Please select at least one screen");
      return;
    }

    console.log("playlistName", playlistName);
    console.log("playlistDescription", playlistDescription);
    console.log("selectedUrls", urls);
    console.log("selectedScreens", selectedScreens);

    try {
      const response = await fetch("/Dashboard/Playlist/createPlaylist", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          screenIDs: selectedScreens,
          urls: urls,
          playlistName: playlistName,
          playlistDescription: playlistDescription,
        }),
      });
      if (!response.ok) {
        throw new Error("Failed to edit playlist");
      }
      const responseData = await response.json();
      console.log("Playlist edit:", responseData.playlist);
      alert("Screen edit successfully!");
      window.location.href = '/Dashboard/Playlist';
    } catch (error) {
      console.error("Error edit playlist:", error);
      alert("Failed to edit playlist. Please try again.");
    }
  }
  window.publishPlaylist = publishPlaylist;

  let searchInput = document.getElementById('searchInput');
  searchInput.value = playlistName;

  function filterScreens() {
    const filter = searchInput.value.toLowerCase();
    const rows = document.querySelectorAll('.screen-row');
    rows.forEach(row => {
      const screenName = row.querySelector('.screen-playlistname').textContent.toLowerCase();
      if (screenName.includes(filter)) {
        row.style.display = '';
      } else {
        row.style.display = 'none';
      }
    });
  }

  searchInput.addEventListener('input', filterScreens);

  window.addEventListener('load', filterScreens);
</script>

<script src="/javaScripts/screen.js"></script>

</body>

</html>
